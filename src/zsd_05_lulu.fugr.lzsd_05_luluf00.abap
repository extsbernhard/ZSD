*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZSD_04_CHG_CUSTP................................*
FORM GET_DATA_ZSD_04_CHG_CUSTP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSD_04_CHG_CUST WHERE
(VIM_WHERETAB) .
    CLEAR ZSD_04_CHG_CUSTP .
ZSD_04_CHG_CUSTP-MANDT =
ZSD_04_CHG_CUST-MANDT .
ZSD_04_CHG_CUSTP-TABNAME =
ZSD_04_CHG_CUST-TABNAME .
ZSD_04_CHG_CUSTP-FIELDNAME =
ZSD_04_CHG_CUST-FIELDNAME .
ZSD_04_CHG_CUSTP-AKTIV =
ZSD_04_CHG_CUST-AKTIV .
<VIM_TOTAL_STRUC> = ZSD_04_CHG_CUSTP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSD_04_CHG_CUSTP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSD_04_CHG_CUSTP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSD_04_CHG_CUSTP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSD_04_CHG_CUST WHERE
  TABNAME = ZSD_04_CHG_CUSTP-TABNAME AND
  FIELDNAME = ZSD_04_CHG_CUSTP-FIELDNAME .
    IF SY-SUBRC = 0.
    DELETE ZSD_04_CHG_CUST .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSD_04_CHG_CUST WHERE
  TABNAME = ZSD_04_CHG_CUSTP-TABNAME AND
  FIELDNAME = ZSD_04_CHG_CUSTP-FIELDNAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSD_04_CHG_CUST.
    ENDIF.
ZSD_04_CHG_CUST-MANDT =
ZSD_04_CHG_CUSTP-MANDT .
ZSD_04_CHG_CUST-TABNAME =
ZSD_04_CHG_CUSTP-TABNAME .
ZSD_04_CHG_CUST-FIELDNAME =
ZSD_04_CHG_CUSTP-FIELDNAME .
ZSD_04_CHG_CUST-AKTIV =
ZSD_04_CHG_CUSTP-AKTIV .
    IF SY-SUBRC = 0.
    UPDATE ZSD_04_CHG_CUST .
    ELSE.
    INSERT ZSD_04_CHG_CUST .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSD_04_CHG_CUSTP-UPD_FLAG,
STATUS_ZSD_04_CHG_CUSTP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSD_04_CHG_CUSTP.
  SELECT SINGLE * FROM ZSD_04_CHG_CUST WHERE
TABNAME = ZSD_04_CHG_CUSTP-TABNAME AND
FIELDNAME = ZSD_04_CHG_CUSTP-FIELDNAME .
ZSD_04_CHG_CUSTP-MANDT =
ZSD_04_CHG_CUST-MANDT .
ZSD_04_CHG_CUSTP-TABNAME =
ZSD_04_CHG_CUST-TABNAME .
ZSD_04_CHG_CUSTP-FIELDNAME =
ZSD_04_CHG_CUST-FIELDNAME .
ZSD_04_CHG_CUSTP-AKTIV =
ZSD_04_CHG_CUST-AKTIV .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSD_04_CHG_CUSTP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSD_04_CHG_CUSTP-TABNAME TO
ZSD_04_CHG_CUST-TABNAME .
MOVE ZSD_04_CHG_CUSTP-FIELDNAME TO
ZSD_04_CHG_CUST-FIELDNAME .
MOVE ZSD_04_CHG_CUSTP-MANDT TO
ZSD_04_CHG_CUST-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSD_04_CHG_CUST'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSD_04_CHG_CUST TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSD_04_CHG_CUST'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSD_05_HINWEISP.................................*
FORM GET_DATA_ZSD_05_HINWEISP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSD_05_HINWEIS WHERE
(VIM_WHERETAB) .
    CLEAR ZSD_05_HINWEISP .
ZSD_05_HINWEISP-MANDT =
ZSD_05_HINWEIS-MANDT .
ZSD_05_HINWEISP-STADTTEIL =
ZSD_05_HINWEIS-STADTTEIL .
ZSD_05_HINWEISP-PARZELLE =
ZSD_05_HINWEIS-PARZELLE .
ZSD_05_HINWEISP-OBJEKT =
ZSD_05_HINWEIS-OBJEKT .
ZSD_05_HINWEISP-HINWEIS =
ZSD_05_HINWEIS-HINWEIS .
ZSD_05_HINWEISP-OBJ_KEY =
ZSD_05_HINWEIS-OBJ_KEY .
<VIM_TOTAL_STRUC> = ZSD_05_HINWEISP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSD_05_HINWEISP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSD_05_HINWEISP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSD_05_HINWEISP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_HINWEIS WHERE
  STADTTEIL = ZSD_05_HINWEISP-STADTTEIL AND
  PARZELLE = ZSD_05_HINWEISP-PARZELLE AND
  OBJEKT = ZSD_05_HINWEISP-OBJEKT AND
  HINWEIS = ZSD_05_HINWEISP-HINWEIS .
    IF SY-SUBRC = 0.
    DELETE ZSD_05_HINWEIS .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_HINWEIS WHERE
  STADTTEIL = ZSD_05_HINWEISP-STADTTEIL AND
  PARZELLE = ZSD_05_HINWEISP-PARZELLE AND
  OBJEKT = ZSD_05_HINWEISP-OBJEKT AND
  HINWEIS = ZSD_05_HINWEISP-HINWEIS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSD_05_HINWEIS.
    ENDIF.
ZSD_05_HINWEIS-MANDT =
ZSD_05_HINWEISP-MANDT .
ZSD_05_HINWEIS-STADTTEIL =
ZSD_05_HINWEISP-STADTTEIL .
ZSD_05_HINWEIS-PARZELLE =
ZSD_05_HINWEISP-PARZELLE .
ZSD_05_HINWEIS-OBJEKT =
ZSD_05_HINWEISP-OBJEKT .
ZSD_05_HINWEIS-HINWEIS =
ZSD_05_HINWEISP-HINWEIS .
ZSD_05_HINWEIS-OBJ_KEY =
ZSD_05_HINWEISP-OBJ_KEY .
    IF SY-SUBRC = 0.
    UPDATE ZSD_05_HINWEIS .
    ELSE.
    INSERT ZSD_05_HINWEIS .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSD_05_HINWEISP-UPD_FLAG,
STATUS_ZSD_05_HINWEISP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSD_05_HINWEISP.
  SELECT SINGLE * FROM ZSD_05_HINWEIS WHERE
STADTTEIL = ZSD_05_HINWEISP-STADTTEIL AND
PARZELLE = ZSD_05_HINWEISP-PARZELLE AND
OBJEKT = ZSD_05_HINWEISP-OBJEKT AND
HINWEIS = ZSD_05_HINWEISP-HINWEIS .
ZSD_05_HINWEISP-MANDT =
ZSD_05_HINWEIS-MANDT .
ZSD_05_HINWEISP-STADTTEIL =
ZSD_05_HINWEIS-STADTTEIL .
ZSD_05_HINWEISP-PARZELLE =
ZSD_05_HINWEIS-PARZELLE .
ZSD_05_HINWEISP-OBJEKT =
ZSD_05_HINWEIS-OBJEKT .
ZSD_05_HINWEISP-HINWEIS =
ZSD_05_HINWEIS-HINWEIS .
ZSD_05_HINWEISP-OBJ_KEY =
ZSD_05_HINWEIS-OBJ_KEY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSD_05_HINWEISP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSD_05_HINWEISP-STADTTEIL TO
ZSD_05_HINWEIS-STADTTEIL .
MOVE ZSD_05_HINWEISP-PARZELLE TO
ZSD_05_HINWEIS-PARZELLE .
MOVE ZSD_05_HINWEISP-OBJEKT TO
ZSD_05_HINWEIS-OBJEKT .
MOVE ZSD_05_HINWEISP-HINWEIS TO
ZSD_05_HINWEIS-HINWEIS .
MOVE ZSD_05_HINWEISP-MANDT TO
ZSD_05_HINWEIS-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSD_05_HINWEIS'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSD_05_HINWEIS TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSD_05_HINWEIS'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSD_05_LULU_HD0P................................*
FORM GET_DATA_ZSD_05_LULU_HD0P.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSD_05_LULU_HD02 WHERE
(VIM_WHERETAB) .
    CLEAR ZSD_05_LULU_HD0P .
ZSD_05_LULU_HD0P-MANDT =
ZSD_05_LULU_HD02-MANDT .
ZSD_05_LULU_HD0P-FALLNR =
ZSD_05_LULU_HD02-FALLNR .
ZSD_05_LULU_HD0P-STADTTEIL =
ZSD_05_LULU_HD02-STADTTEIL .
ZSD_05_LULU_HD0P-PARZELLE =
ZSD_05_LULU_HD02-PARZELLE .
ZSD_05_LULU_HD0P-OBJEKT =
ZSD_05_LULU_HD02-OBJEKT .
ZSD_05_LULU_HD0P-STATUS =
ZSD_05_LULU_HD02-STATUS .
ZSD_05_LULU_HD0P-PER_BEGINN =
ZSD_05_LULU_HD02-PER_BEGINN .
ZSD_05_LULU_HD0P-PER_ENDE =
ZSD_05_LULU_HD02-PER_ENDE .
ZSD_05_LULU_HD0P-VOLLMACHT =
ZSD_05_LULU_HD02-VOLLMACHT .
ZSD_05_LULU_HD0P-EIGEN_KUNNR =
ZSD_05_LULU_HD02-EIGEN_KUNNR .
ZSD_05_LULU_HD0P-VERTR_KUNNR =
ZSD_05_LULU_HD02-VERTR_KUNNR .
ZSD_05_LULU_HD0P-RG_KUNNR =
ZSD_05_LULU_HD02-RG_KUNNR .
ZSD_05_LULU_HD0P-MWST_NR =
ZSD_05_LULU_HD02-MWST_NR .
ZSD_05_LULU_HD0P-VORSTEUERX =
ZSD_05_LULU_HD02-VORSTEUERX .
ZSD_05_LULU_HD0P-EIGDA =
ZSD_05_LULU_HD02-EIGDA .
ZSD_05_LULU_HD0P-NAME1_AUSZ =
ZSD_05_LULU_HD02-NAME1_AUSZ .
ZSD_05_LULU_HD0P-NAME2_AUSZ =
ZSD_05_LULU_HD02-NAME2_AUSZ .
ZSD_05_LULU_HD0P-STRAS_AUSZ =
ZSD_05_LULU_HD02-STRAS_AUSZ .
ZSD_05_LULU_HD0P-ORT1_AUSZ =
ZSD_05_LULU_HD02-ORT1_AUSZ .
ZSD_05_LULU_HD0P-PSTLZ_AUSZ =
ZSD_05_LULU_HD02-PSTLZ_AUSZ .
ZSD_05_LULU_HD0P-BANKL_AUSZ =
ZSD_05_LULU_HD02-BANKL_AUSZ .
ZSD_05_LULU_HD0P-BANKN_AUSZ =
ZSD_05_LULU_HD02-BANKN_AUSZ .
ZSD_05_LULU_HD0P-WRBTR_AUSZ =
ZSD_05_LULU_HD02-WRBTR_AUSZ .
ZSD_05_LULU_HD0P-ESRNR_AUSZ =
ZSD_05_LULU_HD02-ESRNR_AUSZ .
ZSD_05_LULU_HD0P-ESRRE_AUSZ =
ZSD_05_LULU_HD02-ESRRE_AUSZ .
ZSD_05_LULU_HD0P-KONTO_AUSZ =
ZSD_05_LULU_HD02-KONTO_AUSZ .
ZSD_05_LULU_HD0P-SGTXT_AUSZ =
ZSD_05_LULU_HD02-SGTXT_AUSZ .
ZSD_05_LULU_HD0P-ANGABEN_SPERRE_X =
ZSD_05_LULU_HD02-ANGABEN_SPERRE_X .
ZSD_05_LULU_HD0P-LOEVM =
ZSD_05_LULU_HD02-LOEVM .
ZSD_05_LULU_HD0P-PRIDT_EINZ =
ZSD_05_LULU_HD02-PRIDT_EINZ .
ZSD_05_LULU_HD0P-PRIDT_MASS =
ZSD_05_LULU_HD02-PRIDT_MASS .
ZSD_05_LULU_HD0P-VFGDT =
ZSD_05_LULU_HD02-VFGDT .
ZSD_05_LULU_HD0P-RKRDT =
ZSD_05_LULU_HD02-RKRDT .
ZSD_05_LULU_HD0P-ASZDT =
ZSD_05_LULU_HD02-ASZDT .
ZSD_05_LULU_HD0P-BELNR =
ZSD_05_LULU_HD02-BELNR .
ZSD_05_LULU_HD0P-OBJ_KEY =
ZSD_05_LULU_HD02-OBJ_KEY .
<VIM_TOTAL_STRUC> = ZSD_05_LULU_HD0P.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSD_05_LULU_HD0P .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSD_05_LULU_HD0P.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSD_05_LULU_HD0P-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HD02 WHERE
  FALLNR = ZSD_05_LULU_HD0P-FALLNR .
    IF SY-SUBRC = 0.
    DELETE ZSD_05_LULU_HD02 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HD02 WHERE
  FALLNR = ZSD_05_LULU_HD0P-FALLNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSD_05_LULU_HD02.
    ENDIF.
ZSD_05_LULU_HD02-MANDT =
ZSD_05_LULU_HD0P-MANDT .
ZSD_05_LULU_HD02-FALLNR =
ZSD_05_LULU_HD0P-FALLNR .
ZSD_05_LULU_HD02-STADTTEIL =
ZSD_05_LULU_HD0P-STADTTEIL .
ZSD_05_LULU_HD02-PARZELLE =
ZSD_05_LULU_HD0P-PARZELLE .
ZSD_05_LULU_HD02-OBJEKT =
ZSD_05_LULU_HD0P-OBJEKT .
ZSD_05_LULU_HD02-STATUS =
ZSD_05_LULU_HD0P-STATUS .
ZSD_05_LULU_HD02-PER_BEGINN =
ZSD_05_LULU_HD0P-PER_BEGINN .
ZSD_05_LULU_HD02-PER_ENDE =
ZSD_05_LULU_HD0P-PER_ENDE .
ZSD_05_LULU_HD02-VOLLMACHT =
ZSD_05_LULU_HD0P-VOLLMACHT .
ZSD_05_LULU_HD02-EIGEN_KUNNR =
ZSD_05_LULU_HD0P-EIGEN_KUNNR .
ZSD_05_LULU_HD02-VERTR_KUNNR =
ZSD_05_LULU_HD0P-VERTR_KUNNR .
ZSD_05_LULU_HD02-RG_KUNNR =
ZSD_05_LULU_HD0P-RG_KUNNR .
ZSD_05_LULU_HD02-MWST_NR =
ZSD_05_LULU_HD0P-MWST_NR .
ZSD_05_LULU_HD02-VORSTEUERX =
ZSD_05_LULU_HD0P-VORSTEUERX .
ZSD_05_LULU_HD02-EIGDA =
ZSD_05_LULU_HD0P-EIGDA .
ZSD_05_LULU_HD02-NAME1_AUSZ =
ZSD_05_LULU_HD0P-NAME1_AUSZ .
ZSD_05_LULU_HD02-NAME2_AUSZ =
ZSD_05_LULU_HD0P-NAME2_AUSZ .
ZSD_05_LULU_HD02-STRAS_AUSZ =
ZSD_05_LULU_HD0P-STRAS_AUSZ .
ZSD_05_LULU_HD02-ORT1_AUSZ =
ZSD_05_LULU_HD0P-ORT1_AUSZ .
ZSD_05_LULU_HD02-PSTLZ_AUSZ =
ZSD_05_LULU_HD0P-PSTLZ_AUSZ .
ZSD_05_LULU_HD02-BANKL_AUSZ =
ZSD_05_LULU_HD0P-BANKL_AUSZ .
ZSD_05_LULU_HD02-BANKN_AUSZ =
ZSD_05_LULU_HD0P-BANKN_AUSZ .
ZSD_05_LULU_HD02-WRBTR_AUSZ =
ZSD_05_LULU_HD0P-WRBTR_AUSZ .
ZSD_05_LULU_HD02-ESRNR_AUSZ =
ZSD_05_LULU_HD0P-ESRNR_AUSZ .
ZSD_05_LULU_HD02-ESRRE_AUSZ =
ZSD_05_LULU_HD0P-ESRRE_AUSZ .
ZSD_05_LULU_HD02-KONTO_AUSZ =
ZSD_05_LULU_HD0P-KONTO_AUSZ .
ZSD_05_LULU_HD02-SGTXT_AUSZ =
ZSD_05_LULU_HD0P-SGTXT_AUSZ .
ZSD_05_LULU_HD02-ANGABEN_SPERRE_X =
ZSD_05_LULU_HD0P-ANGABEN_SPERRE_X .
ZSD_05_LULU_HD02-LOEVM =
ZSD_05_LULU_HD0P-LOEVM .
ZSD_05_LULU_HD02-PRIDT_EINZ =
ZSD_05_LULU_HD0P-PRIDT_EINZ .
ZSD_05_LULU_HD02-PRIDT_MASS =
ZSD_05_LULU_HD0P-PRIDT_MASS .
ZSD_05_LULU_HD02-VFGDT =
ZSD_05_LULU_HD0P-VFGDT .
ZSD_05_LULU_HD02-RKRDT =
ZSD_05_LULU_HD0P-RKRDT .
ZSD_05_LULU_HD02-ASZDT =
ZSD_05_LULU_HD0P-ASZDT .
ZSD_05_LULU_HD02-BELNR =
ZSD_05_LULU_HD0P-BELNR .
ZSD_05_LULU_HD02-OBJ_KEY =
ZSD_05_LULU_HD0P-OBJ_KEY .
    IF SY-SUBRC = 0.
    UPDATE ZSD_05_LULU_HD02 .
    ELSE.
    INSERT ZSD_05_LULU_HD02 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSD_05_LULU_HD0P-UPD_FLAG,
STATUS_ZSD_05_LULU_HD0P-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSD_05_LULU_HD0P.
  SELECT SINGLE * FROM ZSD_05_LULU_HD02 WHERE
FALLNR = ZSD_05_LULU_HD0P-FALLNR .
ZSD_05_LULU_HD0P-MANDT =
ZSD_05_LULU_HD02-MANDT .
ZSD_05_LULU_HD0P-FALLNR =
ZSD_05_LULU_HD02-FALLNR .
ZSD_05_LULU_HD0P-STADTTEIL =
ZSD_05_LULU_HD02-STADTTEIL .
ZSD_05_LULU_HD0P-PARZELLE =
ZSD_05_LULU_HD02-PARZELLE .
ZSD_05_LULU_HD0P-OBJEKT =
ZSD_05_LULU_HD02-OBJEKT .
ZSD_05_LULU_HD0P-STATUS =
ZSD_05_LULU_HD02-STATUS .
ZSD_05_LULU_HD0P-PER_BEGINN =
ZSD_05_LULU_HD02-PER_BEGINN .
ZSD_05_LULU_HD0P-PER_ENDE =
ZSD_05_LULU_HD02-PER_ENDE .
ZSD_05_LULU_HD0P-VOLLMACHT =
ZSD_05_LULU_HD02-VOLLMACHT .
ZSD_05_LULU_HD0P-EIGEN_KUNNR =
ZSD_05_LULU_HD02-EIGEN_KUNNR .
ZSD_05_LULU_HD0P-VERTR_KUNNR =
ZSD_05_LULU_HD02-VERTR_KUNNR .
ZSD_05_LULU_HD0P-RG_KUNNR =
ZSD_05_LULU_HD02-RG_KUNNR .
ZSD_05_LULU_HD0P-MWST_NR =
ZSD_05_LULU_HD02-MWST_NR .
ZSD_05_LULU_HD0P-VORSTEUERX =
ZSD_05_LULU_HD02-VORSTEUERX .
ZSD_05_LULU_HD0P-EIGDA =
ZSD_05_LULU_HD02-EIGDA .
ZSD_05_LULU_HD0P-NAME1_AUSZ =
ZSD_05_LULU_HD02-NAME1_AUSZ .
ZSD_05_LULU_HD0P-NAME2_AUSZ =
ZSD_05_LULU_HD02-NAME2_AUSZ .
ZSD_05_LULU_HD0P-STRAS_AUSZ =
ZSD_05_LULU_HD02-STRAS_AUSZ .
ZSD_05_LULU_HD0P-ORT1_AUSZ =
ZSD_05_LULU_HD02-ORT1_AUSZ .
ZSD_05_LULU_HD0P-PSTLZ_AUSZ =
ZSD_05_LULU_HD02-PSTLZ_AUSZ .
ZSD_05_LULU_HD0P-BANKL_AUSZ =
ZSD_05_LULU_HD02-BANKL_AUSZ .
ZSD_05_LULU_HD0P-BANKN_AUSZ =
ZSD_05_LULU_HD02-BANKN_AUSZ .
ZSD_05_LULU_HD0P-WRBTR_AUSZ =
ZSD_05_LULU_HD02-WRBTR_AUSZ .
ZSD_05_LULU_HD0P-ESRNR_AUSZ =
ZSD_05_LULU_HD02-ESRNR_AUSZ .
ZSD_05_LULU_HD0P-ESRRE_AUSZ =
ZSD_05_LULU_HD02-ESRRE_AUSZ .
ZSD_05_LULU_HD0P-KONTO_AUSZ =
ZSD_05_LULU_HD02-KONTO_AUSZ .
ZSD_05_LULU_HD0P-SGTXT_AUSZ =
ZSD_05_LULU_HD02-SGTXT_AUSZ .
ZSD_05_LULU_HD0P-ANGABEN_SPERRE_X =
ZSD_05_LULU_HD02-ANGABEN_SPERRE_X .
ZSD_05_LULU_HD0P-LOEVM =
ZSD_05_LULU_HD02-LOEVM .
ZSD_05_LULU_HD0P-PRIDT_EINZ =
ZSD_05_LULU_HD02-PRIDT_EINZ .
ZSD_05_LULU_HD0P-PRIDT_MASS =
ZSD_05_LULU_HD02-PRIDT_MASS .
ZSD_05_LULU_HD0P-VFGDT =
ZSD_05_LULU_HD02-VFGDT .
ZSD_05_LULU_HD0P-RKRDT =
ZSD_05_LULU_HD02-RKRDT .
ZSD_05_LULU_HD0P-ASZDT =
ZSD_05_LULU_HD02-ASZDT .
ZSD_05_LULU_HD0P-BELNR =
ZSD_05_LULU_HD02-BELNR .
ZSD_05_LULU_HD0P-OBJ_KEY =
ZSD_05_LULU_HD02-OBJ_KEY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSD_05_LULU_HD0P USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSD_05_LULU_HD0P-FALLNR TO
ZSD_05_LULU_HD02-FALLNR .
MOVE ZSD_05_LULU_HD0P-MANDT TO
ZSD_05_LULU_HD02-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSD_05_LULU_HD02'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSD_05_LULU_HD02 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSD_05_LULU_HD02'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSD_05_LULU_HEAP................................*
FORM GET_DATA_ZSD_05_LULU_HEAP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSD_05_LULU_HEAD WHERE
(VIM_WHERETAB) .
    CLEAR ZSD_05_LULU_HEAP .
ZSD_05_LULU_HEAP-MANDT =
ZSD_05_LULU_HEAD-MANDT .
ZSD_05_LULU_HEAP-FALLNR =
ZSD_05_LULU_HEAD-FALLNR .
ZSD_05_LULU_HEAP-STADTTEIL =
ZSD_05_LULU_HEAD-STADTTEIL .
ZSD_05_LULU_HEAP-PARZELLE =
ZSD_05_LULU_HEAD-PARZELLE .
ZSD_05_LULU_HEAP-OBJEKT =
ZSD_05_LULU_HEAD-OBJEKT .
ZSD_05_LULU_HEAP-STATUS =
ZSD_05_LULU_HEAD-STATUS .
ZSD_05_LULU_HEAP-PER_BEGINN =
ZSD_05_LULU_HEAD-PER_BEGINN .
ZSD_05_LULU_HEAP-PER_ENDE =
ZSD_05_LULU_HEAD-PER_ENDE .
ZSD_05_LULU_HEAP-EIGEN_VER =
ZSD_05_LULU_HEAD-EIGEN_VER .
ZSD_05_LULU_HEAP-EIGEN_VER_OTHER =
ZSD_05_LULU_HEAD-EIGEN_VER_OTHER .
ZSD_05_LULU_HEAP-ANSCHR_ART =
ZSD_05_LULU_HEAD-ANSCHR_ART .
ZSD_05_LULU_HEAP-VOLLMACHT =
ZSD_05_LULU_HEAD-VOLLMACHT .
ZSD_05_LULU_HEAP-EIGEN_KUNNR =
ZSD_05_LULU_HEAD-EIGEN_KUNNR .
ZSD_05_LULU_HEAP-VERTR_KUNNR =
ZSD_05_LULU_HEAD-VERTR_KUNNR .
ZSD_05_LULU_HEAP-NUTZ_ART =
ZSD_05_LULU_HEAD-NUTZ_ART .
ZSD_05_LULU_HEAP-RUECKERST_ART =
ZSD_05_LULU_HEAD-RUECKERST_ART .
ZSD_05_LULU_HEAP-RG_KUNNR =
ZSD_05_LULU_HEAD-RG_KUNNR .
ZSD_05_LULU_HEAP-MWST_NR =
ZSD_05_LULU_HEAD-MWST_NR .
ZSD_05_LULU_HEAP-VORSTEUERX =
ZSD_05_LULU_HEAD-VORSTEUERX .
ZSD_05_LULU_HEAP-EIGDA =
ZSD_05_LULU_HEAD-EIGDA .
ZSD_05_LULU_HEAP-RUECKZLG_PL_X =
ZSD_05_LULU_HEAD-RUECKZLG_PL_X .
ZSD_05_LULU_HEAP-RUECKZLG_QUOTE =
ZSD_05_LULU_HEAD-RUECKZLG_QUOTE .
ZSD_05_LULU_HEAP-RUECKZLG_QUOTEX =
ZSD_05_LULU_HEAD-RUECKZLG_QUOTEX .
ZSD_05_LULU_HEAP-NAME1_AUSZ =
ZSD_05_LULU_HEAD-NAME1_AUSZ .
ZSD_05_LULU_HEAP-NAME2_AUSZ =
ZSD_05_LULU_HEAD-NAME2_AUSZ .
ZSD_05_LULU_HEAP-STRAS_AUSZ =
ZSD_05_LULU_HEAD-STRAS_AUSZ .
ZSD_05_LULU_HEAP-ORT1_AUSZ =
ZSD_05_LULU_HEAD-ORT1_AUSZ .
ZSD_05_LULU_HEAP-PSTLZ_AUSZ =
ZSD_05_LULU_HEAD-PSTLZ_AUSZ .
ZSD_05_LULU_HEAP-BANKL_AUSZ =
ZSD_05_LULU_HEAD-BANKL_AUSZ .
ZSD_05_LULU_HEAP-BANKN_AUSZ =
ZSD_05_LULU_HEAD-BANKN_AUSZ .
ZSD_05_LULU_HEAP-WRBTR_AUSZ =
ZSD_05_LULU_HEAD-WRBTR_AUSZ .
ZSD_05_LULU_HEAP-ESRNR_AUSZ =
ZSD_05_LULU_HEAD-ESRNR_AUSZ .
ZSD_05_LULU_HEAP-ESRRE_AUSZ =
ZSD_05_LULU_HEAD-ESRRE_AUSZ .
ZSD_05_LULU_HEAP-KONTO_AUSZ =
ZSD_05_LULU_HEAD-KONTO_AUSZ .
ZSD_05_LULU_HEAP-SGTXT_AUSZ =
ZSD_05_LULU_HEAD-SGTXT_AUSZ .
ZSD_05_LULU_HEAP-LOEVM =
ZSD_05_LULU_HEAD-LOEVM .
ZSD_05_LULU_HEAP-VFGDT =
ZSD_05_LULU_HEAD-VFGDT .
ZSD_05_LULU_HEAP-RKRDT =
ZSD_05_LULU_HEAD-RKRDT .
ZSD_05_LULU_HEAP-ASZDT =
ZSD_05_LULU_HEAD-ASZDT .
ZSD_05_LULU_HEAP-BELNR =
ZSD_05_LULU_HEAD-BELNR .
ZSD_05_LULU_HEAP-OBJ_KEY =
ZSD_05_LULU_HEAD-OBJ_KEY .
<VIM_TOTAL_STRUC> = ZSD_05_LULU_HEAP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSD_05_LULU_HEAP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSD_05_LULU_HEAP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSD_05_LULU_HEAP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HEAD WHERE
  FALLNR = ZSD_05_LULU_HEAP-FALLNR .
    IF SY-SUBRC = 0.
    DELETE ZSD_05_LULU_HEAD .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HEAD WHERE
  FALLNR = ZSD_05_LULU_HEAP-FALLNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSD_05_LULU_HEAD.
    ENDIF.
ZSD_05_LULU_HEAD-MANDT =
ZSD_05_LULU_HEAP-MANDT .
ZSD_05_LULU_HEAD-FALLNR =
ZSD_05_LULU_HEAP-FALLNR .
ZSD_05_LULU_HEAD-STADTTEIL =
ZSD_05_LULU_HEAP-STADTTEIL .
ZSD_05_LULU_HEAD-PARZELLE =
ZSD_05_LULU_HEAP-PARZELLE .
ZSD_05_LULU_HEAD-OBJEKT =
ZSD_05_LULU_HEAP-OBJEKT .
ZSD_05_LULU_HEAD-STATUS =
ZSD_05_LULU_HEAP-STATUS .
ZSD_05_LULU_HEAD-PER_BEGINN =
ZSD_05_LULU_HEAP-PER_BEGINN .
ZSD_05_LULU_HEAD-PER_ENDE =
ZSD_05_LULU_HEAP-PER_ENDE .
ZSD_05_LULU_HEAD-EIGEN_VER =
ZSD_05_LULU_HEAP-EIGEN_VER .
ZSD_05_LULU_HEAD-EIGEN_VER_OTHER =
ZSD_05_LULU_HEAP-EIGEN_VER_OTHER .
ZSD_05_LULU_HEAD-ANSCHR_ART =
ZSD_05_LULU_HEAP-ANSCHR_ART .
ZSD_05_LULU_HEAD-VOLLMACHT =
ZSD_05_LULU_HEAP-VOLLMACHT .
ZSD_05_LULU_HEAD-EIGEN_KUNNR =
ZSD_05_LULU_HEAP-EIGEN_KUNNR .
ZSD_05_LULU_HEAD-VERTR_KUNNR =
ZSD_05_LULU_HEAP-VERTR_KUNNR .
ZSD_05_LULU_HEAD-NUTZ_ART =
ZSD_05_LULU_HEAP-NUTZ_ART .
ZSD_05_LULU_HEAD-RUECKERST_ART =
ZSD_05_LULU_HEAP-RUECKERST_ART .
ZSD_05_LULU_HEAD-RG_KUNNR =
ZSD_05_LULU_HEAP-RG_KUNNR .
ZSD_05_LULU_HEAD-MWST_NR =
ZSD_05_LULU_HEAP-MWST_NR .
ZSD_05_LULU_HEAD-VORSTEUERX =
ZSD_05_LULU_HEAP-VORSTEUERX .
ZSD_05_LULU_HEAD-EIGDA =
ZSD_05_LULU_HEAP-EIGDA .
ZSD_05_LULU_HEAD-RUECKZLG_PL_X =
ZSD_05_LULU_HEAP-RUECKZLG_PL_X .
ZSD_05_LULU_HEAD-RUECKZLG_QUOTE =
ZSD_05_LULU_HEAP-RUECKZLG_QUOTE .
ZSD_05_LULU_HEAD-RUECKZLG_QUOTEX =
ZSD_05_LULU_HEAP-RUECKZLG_QUOTEX .
ZSD_05_LULU_HEAD-NAME1_AUSZ =
ZSD_05_LULU_HEAP-NAME1_AUSZ .
ZSD_05_LULU_HEAD-NAME2_AUSZ =
ZSD_05_LULU_HEAP-NAME2_AUSZ .
ZSD_05_LULU_HEAD-STRAS_AUSZ =
ZSD_05_LULU_HEAP-STRAS_AUSZ .
ZSD_05_LULU_HEAD-ORT1_AUSZ =
ZSD_05_LULU_HEAP-ORT1_AUSZ .
ZSD_05_LULU_HEAD-PSTLZ_AUSZ =
ZSD_05_LULU_HEAP-PSTLZ_AUSZ .
ZSD_05_LULU_HEAD-BANKL_AUSZ =
ZSD_05_LULU_HEAP-BANKL_AUSZ .
ZSD_05_LULU_HEAD-BANKN_AUSZ =
ZSD_05_LULU_HEAP-BANKN_AUSZ .
ZSD_05_LULU_HEAD-WRBTR_AUSZ =
ZSD_05_LULU_HEAP-WRBTR_AUSZ .
ZSD_05_LULU_HEAD-ESRNR_AUSZ =
ZSD_05_LULU_HEAP-ESRNR_AUSZ .
ZSD_05_LULU_HEAD-ESRRE_AUSZ =
ZSD_05_LULU_HEAP-ESRRE_AUSZ .
ZSD_05_LULU_HEAD-KONTO_AUSZ =
ZSD_05_LULU_HEAP-KONTO_AUSZ .
ZSD_05_LULU_HEAD-SGTXT_AUSZ =
ZSD_05_LULU_HEAP-SGTXT_AUSZ .
ZSD_05_LULU_HEAD-LOEVM =
ZSD_05_LULU_HEAP-LOEVM .
ZSD_05_LULU_HEAD-VFGDT =
ZSD_05_LULU_HEAP-VFGDT .
ZSD_05_LULU_HEAD-RKRDT =
ZSD_05_LULU_HEAP-RKRDT .
ZSD_05_LULU_HEAD-ASZDT =
ZSD_05_LULU_HEAP-ASZDT .
ZSD_05_LULU_HEAD-BELNR =
ZSD_05_LULU_HEAP-BELNR .
ZSD_05_LULU_HEAD-OBJ_KEY =
ZSD_05_LULU_HEAP-OBJ_KEY .
    IF SY-SUBRC = 0.
    UPDATE ZSD_05_LULU_HEAD .
    ELSE.
    INSERT ZSD_05_LULU_HEAD .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSD_05_LULU_HEAP-UPD_FLAG,
STATUS_ZSD_05_LULU_HEAP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSD_05_LULU_HEAP.
  SELECT SINGLE * FROM ZSD_05_LULU_HEAD WHERE
FALLNR = ZSD_05_LULU_HEAP-FALLNR .
ZSD_05_LULU_HEAP-MANDT =
ZSD_05_LULU_HEAD-MANDT .
ZSD_05_LULU_HEAP-FALLNR =
ZSD_05_LULU_HEAD-FALLNR .
ZSD_05_LULU_HEAP-STADTTEIL =
ZSD_05_LULU_HEAD-STADTTEIL .
ZSD_05_LULU_HEAP-PARZELLE =
ZSD_05_LULU_HEAD-PARZELLE .
ZSD_05_LULU_HEAP-OBJEKT =
ZSD_05_LULU_HEAD-OBJEKT .
ZSD_05_LULU_HEAP-STATUS =
ZSD_05_LULU_HEAD-STATUS .
ZSD_05_LULU_HEAP-PER_BEGINN =
ZSD_05_LULU_HEAD-PER_BEGINN .
ZSD_05_LULU_HEAP-PER_ENDE =
ZSD_05_LULU_HEAD-PER_ENDE .
ZSD_05_LULU_HEAP-EIGEN_VER =
ZSD_05_LULU_HEAD-EIGEN_VER .
ZSD_05_LULU_HEAP-EIGEN_VER_OTHER =
ZSD_05_LULU_HEAD-EIGEN_VER_OTHER .
ZSD_05_LULU_HEAP-ANSCHR_ART =
ZSD_05_LULU_HEAD-ANSCHR_ART .
ZSD_05_LULU_HEAP-VOLLMACHT =
ZSD_05_LULU_HEAD-VOLLMACHT .
ZSD_05_LULU_HEAP-EIGEN_KUNNR =
ZSD_05_LULU_HEAD-EIGEN_KUNNR .
ZSD_05_LULU_HEAP-VERTR_KUNNR =
ZSD_05_LULU_HEAD-VERTR_KUNNR .
ZSD_05_LULU_HEAP-NUTZ_ART =
ZSD_05_LULU_HEAD-NUTZ_ART .
ZSD_05_LULU_HEAP-RUECKERST_ART =
ZSD_05_LULU_HEAD-RUECKERST_ART .
ZSD_05_LULU_HEAP-RG_KUNNR =
ZSD_05_LULU_HEAD-RG_KUNNR .
ZSD_05_LULU_HEAP-MWST_NR =
ZSD_05_LULU_HEAD-MWST_NR .
ZSD_05_LULU_HEAP-VORSTEUERX =
ZSD_05_LULU_HEAD-VORSTEUERX .
ZSD_05_LULU_HEAP-EIGDA =
ZSD_05_LULU_HEAD-EIGDA .
ZSD_05_LULU_HEAP-RUECKZLG_PL_X =
ZSD_05_LULU_HEAD-RUECKZLG_PL_X .
ZSD_05_LULU_HEAP-RUECKZLG_QUOTE =
ZSD_05_LULU_HEAD-RUECKZLG_QUOTE .
ZSD_05_LULU_HEAP-RUECKZLG_QUOTEX =
ZSD_05_LULU_HEAD-RUECKZLG_QUOTEX .
ZSD_05_LULU_HEAP-NAME1_AUSZ =
ZSD_05_LULU_HEAD-NAME1_AUSZ .
ZSD_05_LULU_HEAP-NAME2_AUSZ =
ZSD_05_LULU_HEAD-NAME2_AUSZ .
ZSD_05_LULU_HEAP-STRAS_AUSZ =
ZSD_05_LULU_HEAD-STRAS_AUSZ .
ZSD_05_LULU_HEAP-ORT1_AUSZ =
ZSD_05_LULU_HEAD-ORT1_AUSZ .
ZSD_05_LULU_HEAP-PSTLZ_AUSZ =
ZSD_05_LULU_HEAD-PSTLZ_AUSZ .
ZSD_05_LULU_HEAP-BANKL_AUSZ =
ZSD_05_LULU_HEAD-BANKL_AUSZ .
ZSD_05_LULU_HEAP-BANKN_AUSZ =
ZSD_05_LULU_HEAD-BANKN_AUSZ .
ZSD_05_LULU_HEAP-WRBTR_AUSZ =
ZSD_05_LULU_HEAD-WRBTR_AUSZ .
ZSD_05_LULU_HEAP-ESRNR_AUSZ =
ZSD_05_LULU_HEAD-ESRNR_AUSZ .
ZSD_05_LULU_HEAP-ESRRE_AUSZ =
ZSD_05_LULU_HEAD-ESRRE_AUSZ .
ZSD_05_LULU_HEAP-KONTO_AUSZ =
ZSD_05_LULU_HEAD-KONTO_AUSZ .
ZSD_05_LULU_HEAP-SGTXT_AUSZ =
ZSD_05_LULU_HEAD-SGTXT_AUSZ .
ZSD_05_LULU_HEAP-LOEVM =
ZSD_05_LULU_HEAD-LOEVM .
ZSD_05_LULU_HEAP-VFGDT =
ZSD_05_LULU_HEAD-VFGDT .
ZSD_05_LULU_HEAP-RKRDT =
ZSD_05_LULU_HEAD-RKRDT .
ZSD_05_LULU_HEAP-ASZDT =
ZSD_05_LULU_HEAD-ASZDT .
ZSD_05_LULU_HEAP-BELNR =
ZSD_05_LULU_HEAD-BELNR .
ZSD_05_LULU_HEAP-OBJ_KEY =
ZSD_05_LULU_HEAD-OBJ_KEY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSD_05_LULU_HEAP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSD_05_LULU_HEAP-FALLNR TO
ZSD_05_LULU_HEAD-FALLNR .
MOVE ZSD_05_LULU_HEAP-MANDT TO
ZSD_05_LULU_HEAD-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSD_05_LULU_HEAD'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSD_05_LULU_HEAD TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSD_05_LULU_HEAD'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSD_05_LULU_HEKP................................*
FORM GET_DATA_ZSD_05_LULU_HEKP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSD_05_LULU_HEAK WHERE
(VIM_WHERETAB) .
    CLEAR ZSD_05_LULU_HEKP .
ZSD_05_LULU_HEKP-MANDT =
ZSD_05_LULU_HEAK-MANDT .
ZSD_05_LULU_HEKP-FALLNR =
ZSD_05_LULU_HEAK-FALLNR .
ZSD_05_LULU_HEKP-STADTTEIL =
ZSD_05_LULU_HEAK-STADTTEIL .
ZSD_05_LULU_HEKP-PARZELLE =
ZSD_05_LULU_HEAK-PARZELLE .
ZSD_05_LULU_HEKP-OBJEKT =
ZSD_05_LULU_HEAK-OBJEKT .
ZSD_05_LULU_HEKP-STATUS =
ZSD_05_LULU_HEAK-STATUS .
ZSD_05_LULU_HEKP-PER_BEGINN =
ZSD_05_LULU_HEAK-PER_BEGINN .
ZSD_05_LULU_HEKP-PER_ENDE =
ZSD_05_LULU_HEAK-PER_ENDE .
ZSD_05_LULU_HEKP-EIGEN_VER =
ZSD_05_LULU_HEAK-EIGEN_VER .
ZSD_05_LULU_HEKP-EIGEN_VER_OTHER =
ZSD_05_LULU_HEAK-EIGEN_VER_OTHER .
ZSD_05_LULU_HEKP-ANSCHR_ART =
ZSD_05_LULU_HEAK-ANSCHR_ART .
ZSD_05_LULU_HEKP-VOLLMACHT =
ZSD_05_LULU_HEAK-VOLLMACHT .
ZSD_05_LULU_HEKP-EIGEN_KUNNR =
ZSD_05_LULU_HEAK-EIGEN_KUNNR .
ZSD_05_LULU_HEKP-VERTR_KUNNR =
ZSD_05_LULU_HEAK-VERTR_KUNNR .
ZSD_05_LULU_HEKP-NUTZ_ART =
ZSD_05_LULU_HEAK-NUTZ_ART .
ZSD_05_LULU_HEKP-RUECKERST_ART =
ZSD_05_LULU_HEAK-RUECKERST_ART .
ZSD_05_LULU_HEKP-RG_KUNNR =
ZSD_05_LULU_HEAK-RG_KUNNR .
ZSD_05_LULU_HEKP-MWST_NR =
ZSD_05_LULU_HEAK-MWST_NR .
ZSD_05_LULU_HEKP-VORSTEUERX =
ZSD_05_LULU_HEAK-VORSTEUERX .
ZSD_05_LULU_HEKP-EIGDA =
ZSD_05_LULU_HEAK-EIGDA .
ZSD_05_LULU_HEKP-RUECKZLG_PL_X =
ZSD_05_LULU_HEAK-RUECKZLG_PL_X .
ZSD_05_LULU_HEKP-RUECKZLG_QUOTE =
ZSD_05_LULU_HEAK-RUECKZLG_QUOTE .
ZSD_05_LULU_HEKP-RUECKZLG_QUOTEX =
ZSD_05_LULU_HEAK-RUECKZLG_QUOTEX .
ZSD_05_LULU_HEKP-NAME1_AUSZ =
ZSD_05_LULU_HEAK-NAME1_AUSZ .
ZSD_05_LULU_HEKP-NAME2_AUSZ =
ZSD_05_LULU_HEAK-NAME2_AUSZ .
ZSD_05_LULU_HEKP-STRAS_AUSZ =
ZSD_05_LULU_HEAK-STRAS_AUSZ .
ZSD_05_LULU_HEKP-ORT1_AUSZ =
ZSD_05_LULU_HEAK-ORT1_AUSZ .
ZSD_05_LULU_HEKP-PSTLZ_AUSZ =
ZSD_05_LULU_HEAK-PSTLZ_AUSZ .
ZSD_05_LULU_HEKP-BANKL_AUSZ =
ZSD_05_LULU_HEAK-BANKL_AUSZ .
ZSD_05_LULU_HEKP-BANKN_AUSZ =
ZSD_05_LULU_HEAK-BANKN_AUSZ .
ZSD_05_LULU_HEKP-WRBTR_AUSZ =
ZSD_05_LULU_HEAK-WRBTR_AUSZ .
ZSD_05_LULU_HEKP-ESRNR_AUSZ =
ZSD_05_LULU_HEAK-ESRNR_AUSZ .
ZSD_05_LULU_HEKP-ESRRE_AUSZ =
ZSD_05_LULU_HEAK-ESRRE_AUSZ .
ZSD_05_LULU_HEKP-KONTO_AUSZ =
ZSD_05_LULU_HEAK-KONTO_AUSZ .
ZSD_05_LULU_HEKP-SGTXT_AUSZ =
ZSD_05_LULU_HEAK-SGTXT_AUSZ .
ZSD_05_LULU_HEKP-LOEVM =
ZSD_05_LULU_HEAK-LOEVM .
ZSD_05_LULU_HEKP-VFGDT =
ZSD_05_LULU_HEAK-VFGDT .
ZSD_05_LULU_HEKP-RKRDT =
ZSD_05_LULU_HEAK-RKRDT .
ZSD_05_LULU_HEKP-ASZDT =
ZSD_05_LULU_HEAK-ASZDT .
ZSD_05_LULU_HEKP-BELNR =
ZSD_05_LULU_HEAK-BELNR .
ZSD_05_LULU_HEKP-OBJ_KEY =
ZSD_05_LULU_HEAK-OBJ_KEY .
<VIM_TOTAL_STRUC> = ZSD_05_LULU_HEKP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSD_05_LULU_HEKP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSD_05_LULU_HEKP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSD_05_LULU_HEKP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HEAK WHERE
  FALLNR = ZSD_05_LULU_HEKP-FALLNR .
    IF SY-SUBRC = 0.
    DELETE ZSD_05_LULU_HEAK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HEAK WHERE
  FALLNR = ZSD_05_LULU_HEKP-FALLNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSD_05_LULU_HEAK.
    ENDIF.
ZSD_05_LULU_HEAK-MANDT =
ZSD_05_LULU_HEKP-MANDT .
ZSD_05_LULU_HEAK-FALLNR =
ZSD_05_LULU_HEKP-FALLNR .
ZSD_05_LULU_HEAK-STADTTEIL =
ZSD_05_LULU_HEKP-STADTTEIL .
ZSD_05_LULU_HEAK-PARZELLE =
ZSD_05_LULU_HEKP-PARZELLE .
ZSD_05_LULU_HEAK-OBJEKT =
ZSD_05_LULU_HEKP-OBJEKT .
ZSD_05_LULU_HEAK-STATUS =
ZSD_05_LULU_HEKP-STATUS .
ZSD_05_LULU_HEAK-PER_BEGINN =
ZSD_05_LULU_HEKP-PER_BEGINN .
ZSD_05_LULU_HEAK-PER_ENDE =
ZSD_05_LULU_HEKP-PER_ENDE .
ZSD_05_LULU_HEAK-EIGEN_VER =
ZSD_05_LULU_HEKP-EIGEN_VER .
ZSD_05_LULU_HEAK-EIGEN_VER_OTHER =
ZSD_05_LULU_HEKP-EIGEN_VER_OTHER .
ZSD_05_LULU_HEAK-ANSCHR_ART =
ZSD_05_LULU_HEKP-ANSCHR_ART .
ZSD_05_LULU_HEAK-VOLLMACHT =
ZSD_05_LULU_HEKP-VOLLMACHT .
ZSD_05_LULU_HEAK-EIGEN_KUNNR =
ZSD_05_LULU_HEKP-EIGEN_KUNNR .
ZSD_05_LULU_HEAK-VERTR_KUNNR =
ZSD_05_LULU_HEKP-VERTR_KUNNR .
ZSD_05_LULU_HEAK-NUTZ_ART =
ZSD_05_LULU_HEKP-NUTZ_ART .
ZSD_05_LULU_HEAK-RUECKERST_ART =
ZSD_05_LULU_HEKP-RUECKERST_ART .
ZSD_05_LULU_HEAK-RG_KUNNR =
ZSD_05_LULU_HEKP-RG_KUNNR .
ZSD_05_LULU_HEAK-MWST_NR =
ZSD_05_LULU_HEKP-MWST_NR .
ZSD_05_LULU_HEAK-VORSTEUERX =
ZSD_05_LULU_HEKP-VORSTEUERX .
ZSD_05_LULU_HEAK-EIGDA =
ZSD_05_LULU_HEKP-EIGDA .
ZSD_05_LULU_HEAK-RUECKZLG_PL_X =
ZSD_05_LULU_HEKP-RUECKZLG_PL_X .
ZSD_05_LULU_HEAK-RUECKZLG_QUOTE =
ZSD_05_LULU_HEKP-RUECKZLG_QUOTE .
ZSD_05_LULU_HEAK-RUECKZLG_QUOTEX =
ZSD_05_LULU_HEKP-RUECKZLG_QUOTEX .
ZSD_05_LULU_HEAK-NAME1_AUSZ =
ZSD_05_LULU_HEKP-NAME1_AUSZ .
ZSD_05_LULU_HEAK-NAME2_AUSZ =
ZSD_05_LULU_HEKP-NAME2_AUSZ .
ZSD_05_LULU_HEAK-STRAS_AUSZ =
ZSD_05_LULU_HEKP-STRAS_AUSZ .
ZSD_05_LULU_HEAK-ORT1_AUSZ =
ZSD_05_LULU_HEKP-ORT1_AUSZ .
ZSD_05_LULU_HEAK-PSTLZ_AUSZ =
ZSD_05_LULU_HEKP-PSTLZ_AUSZ .
ZSD_05_LULU_HEAK-BANKL_AUSZ =
ZSD_05_LULU_HEKP-BANKL_AUSZ .
ZSD_05_LULU_HEAK-BANKN_AUSZ =
ZSD_05_LULU_HEKP-BANKN_AUSZ .
ZSD_05_LULU_HEAK-WRBTR_AUSZ =
ZSD_05_LULU_HEKP-WRBTR_AUSZ .
ZSD_05_LULU_HEAK-ESRNR_AUSZ =
ZSD_05_LULU_HEKP-ESRNR_AUSZ .
ZSD_05_LULU_HEAK-ESRRE_AUSZ =
ZSD_05_LULU_HEKP-ESRRE_AUSZ .
ZSD_05_LULU_HEAK-KONTO_AUSZ =
ZSD_05_LULU_HEKP-KONTO_AUSZ .
ZSD_05_LULU_HEAK-SGTXT_AUSZ =
ZSD_05_LULU_HEKP-SGTXT_AUSZ .
ZSD_05_LULU_HEAK-LOEVM =
ZSD_05_LULU_HEKP-LOEVM .
ZSD_05_LULU_HEAK-VFGDT =
ZSD_05_LULU_HEKP-VFGDT .
ZSD_05_LULU_HEAK-RKRDT =
ZSD_05_LULU_HEKP-RKRDT .
ZSD_05_LULU_HEAK-ASZDT =
ZSD_05_LULU_HEKP-ASZDT .
ZSD_05_LULU_HEAK-BELNR =
ZSD_05_LULU_HEKP-BELNR .
ZSD_05_LULU_HEAK-OBJ_KEY =
ZSD_05_LULU_HEKP-OBJ_KEY .
    IF SY-SUBRC = 0.
    UPDATE ZSD_05_LULU_HEAK .
    ELSE.
    INSERT ZSD_05_LULU_HEAK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSD_05_LULU_HEKP-UPD_FLAG,
STATUS_ZSD_05_LULU_HEKP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSD_05_LULU_HEKP.
  SELECT SINGLE * FROM ZSD_05_LULU_HEAK WHERE
FALLNR = ZSD_05_LULU_HEKP-FALLNR .
ZSD_05_LULU_HEKP-MANDT =
ZSD_05_LULU_HEAK-MANDT .
ZSD_05_LULU_HEKP-FALLNR =
ZSD_05_LULU_HEAK-FALLNR .
ZSD_05_LULU_HEKP-STADTTEIL =
ZSD_05_LULU_HEAK-STADTTEIL .
ZSD_05_LULU_HEKP-PARZELLE =
ZSD_05_LULU_HEAK-PARZELLE .
ZSD_05_LULU_HEKP-OBJEKT =
ZSD_05_LULU_HEAK-OBJEKT .
ZSD_05_LULU_HEKP-STATUS =
ZSD_05_LULU_HEAK-STATUS .
ZSD_05_LULU_HEKP-PER_BEGINN =
ZSD_05_LULU_HEAK-PER_BEGINN .
ZSD_05_LULU_HEKP-PER_ENDE =
ZSD_05_LULU_HEAK-PER_ENDE .
ZSD_05_LULU_HEKP-EIGEN_VER =
ZSD_05_LULU_HEAK-EIGEN_VER .
ZSD_05_LULU_HEKP-EIGEN_VER_OTHER =
ZSD_05_LULU_HEAK-EIGEN_VER_OTHER .
ZSD_05_LULU_HEKP-ANSCHR_ART =
ZSD_05_LULU_HEAK-ANSCHR_ART .
ZSD_05_LULU_HEKP-VOLLMACHT =
ZSD_05_LULU_HEAK-VOLLMACHT .
ZSD_05_LULU_HEKP-EIGEN_KUNNR =
ZSD_05_LULU_HEAK-EIGEN_KUNNR .
ZSD_05_LULU_HEKP-VERTR_KUNNR =
ZSD_05_LULU_HEAK-VERTR_KUNNR .
ZSD_05_LULU_HEKP-NUTZ_ART =
ZSD_05_LULU_HEAK-NUTZ_ART .
ZSD_05_LULU_HEKP-RUECKERST_ART =
ZSD_05_LULU_HEAK-RUECKERST_ART .
ZSD_05_LULU_HEKP-RG_KUNNR =
ZSD_05_LULU_HEAK-RG_KUNNR .
ZSD_05_LULU_HEKP-MWST_NR =
ZSD_05_LULU_HEAK-MWST_NR .
ZSD_05_LULU_HEKP-VORSTEUERX =
ZSD_05_LULU_HEAK-VORSTEUERX .
ZSD_05_LULU_HEKP-EIGDA =
ZSD_05_LULU_HEAK-EIGDA .
ZSD_05_LULU_HEKP-RUECKZLG_PL_X =
ZSD_05_LULU_HEAK-RUECKZLG_PL_X .
ZSD_05_LULU_HEKP-RUECKZLG_QUOTE =
ZSD_05_LULU_HEAK-RUECKZLG_QUOTE .
ZSD_05_LULU_HEKP-RUECKZLG_QUOTEX =
ZSD_05_LULU_HEAK-RUECKZLG_QUOTEX .
ZSD_05_LULU_HEKP-NAME1_AUSZ =
ZSD_05_LULU_HEAK-NAME1_AUSZ .
ZSD_05_LULU_HEKP-NAME2_AUSZ =
ZSD_05_LULU_HEAK-NAME2_AUSZ .
ZSD_05_LULU_HEKP-STRAS_AUSZ =
ZSD_05_LULU_HEAK-STRAS_AUSZ .
ZSD_05_LULU_HEKP-ORT1_AUSZ =
ZSD_05_LULU_HEAK-ORT1_AUSZ .
ZSD_05_LULU_HEKP-PSTLZ_AUSZ =
ZSD_05_LULU_HEAK-PSTLZ_AUSZ .
ZSD_05_LULU_HEKP-BANKL_AUSZ =
ZSD_05_LULU_HEAK-BANKL_AUSZ .
ZSD_05_LULU_HEKP-BANKN_AUSZ =
ZSD_05_LULU_HEAK-BANKN_AUSZ .
ZSD_05_LULU_HEKP-WRBTR_AUSZ =
ZSD_05_LULU_HEAK-WRBTR_AUSZ .
ZSD_05_LULU_HEKP-ESRNR_AUSZ =
ZSD_05_LULU_HEAK-ESRNR_AUSZ .
ZSD_05_LULU_HEKP-ESRRE_AUSZ =
ZSD_05_LULU_HEAK-ESRRE_AUSZ .
ZSD_05_LULU_HEKP-KONTO_AUSZ =
ZSD_05_LULU_HEAK-KONTO_AUSZ .
ZSD_05_LULU_HEKP-SGTXT_AUSZ =
ZSD_05_LULU_HEAK-SGTXT_AUSZ .
ZSD_05_LULU_HEKP-LOEVM =
ZSD_05_LULU_HEAK-LOEVM .
ZSD_05_LULU_HEKP-VFGDT =
ZSD_05_LULU_HEAK-VFGDT .
ZSD_05_LULU_HEKP-RKRDT =
ZSD_05_LULU_HEAK-RKRDT .
ZSD_05_LULU_HEKP-ASZDT =
ZSD_05_LULU_HEAK-ASZDT .
ZSD_05_LULU_HEKP-BELNR =
ZSD_05_LULU_HEAK-BELNR .
ZSD_05_LULU_HEKP-OBJ_KEY =
ZSD_05_LULU_HEAK-OBJ_KEY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSD_05_LULU_HEKP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSD_05_LULU_HEKP-FALLNR TO
ZSD_05_LULU_HEAK-FALLNR .
MOVE ZSD_05_LULU_HEKP-MANDT TO
ZSD_05_LULU_HEAK-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSD_05_LULU_HEAK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSD_05_LULU_HEAK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSD_05_LULU_HEAK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSD_05_LULU_HLPP................................*
FORM GET_DATA_ZSD_05_LULU_HLPP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSD_05_LULU_HELP WHERE
(VIM_WHERETAB) .
    CLEAR ZSD_05_LULU_HLPP .
ZSD_05_LULU_HLPP-MANDT =
ZSD_05_LULU_HELP-MANDT .
ZSD_05_LULU_HLPP-STADTTEIL =
ZSD_05_LULU_HELP-STADTTEIL .
ZSD_05_LULU_HLPP-PARZELLE =
ZSD_05_LULU_HELP-PARZELLE .
ZSD_05_LULU_HLPP-OBJEKT =
ZSD_05_LULU_HELP-OBJEKT .
ZSD_05_LULU_HLPP-KUNNR =
ZSD_05_LULU_HELP-KUNNR .
ZSD_05_LULU_HLPP-PER_BEGINN =
ZSD_05_LULU_HELP-PER_BEGINN .
ZSD_05_LULU_HLPP-PER_ENDE =
ZSD_05_LULU_HELP-PER_ENDE .
ZSD_05_LULU_HLPP-FAKNR =
ZSD_05_LULU_HELP-FAKNR .
<VIM_TOTAL_STRUC> = ZSD_05_LULU_HLPP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSD_05_LULU_HLPP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSD_05_LULU_HLPP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSD_05_LULU_HLPP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HELP WHERE
  STADTTEIL = ZSD_05_LULU_HLPP-STADTTEIL AND
  PARZELLE = ZSD_05_LULU_HLPP-PARZELLE AND
  OBJEKT = ZSD_05_LULU_HLPP-OBJEKT AND
  KUNNR = ZSD_05_LULU_HLPP-KUNNR AND
  PER_BEGINN = ZSD_05_LULU_HLPP-PER_BEGINN AND
  PER_ENDE = ZSD_05_LULU_HLPP-PER_ENDE .
    IF SY-SUBRC = 0.
    DELETE ZSD_05_LULU_HELP .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSD_05_LULU_HELP WHERE
  STADTTEIL = ZSD_05_LULU_HLPP-STADTTEIL AND
  PARZELLE = ZSD_05_LULU_HLPP-PARZELLE AND
  OBJEKT = ZSD_05_LULU_HLPP-OBJEKT AND
  KUNNR = ZSD_05_LULU_HLPP-KUNNR AND
  PER_BEGINN = ZSD_05_LULU_HLPP-PER_BEGINN AND
  PER_ENDE = ZSD_05_LULU_HLPP-PER_ENDE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSD_05_LULU_HELP.
    ENDIF.
ZSD_05_LULU_HELP-MANDT =
ZSD_05_LULU_HLPP-MANDT .
ZSD_05_LULU_HELP-STADTTEIL =
ZSD_05_LULU_HLPP-STADTTEIL .
ZSD_05_LULU_HELP-PARZELLE =
ZSD_05_LULU_HLPP-PARZELLE .
ZSD_05_LULU_HELP-OBJEKT =
ZSD_05_LULU_HLPP-OBJEKT .
ZSD_05_LULU_HELP-KUNNR =
ZSD_05_LULU_HLPP-KUNNR .
ZSD_05_LULU_HELP-PER_BEGINN =
ZSD_05_LULU_HLPP-PER_BEGINN .
ZSD_05_LULU_HELP-PER_ENDE =
ZSD_05_LULU_HLPP-PER_ENDE .
ZSD_05_LULU_HELP-FAKNR =
ZSD_05_LULU_HLPP-FAKNR .
    IF SY-SUBRC = 0.
    UPDATE ZSD_05_LULU_HELP .
    ELSE.
    INSERT ZSD_05_LULU_HELP .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSD_05_LULU_HLPP-UPD_FLAG,
STATUS_ZSD_05_LULU_HLPP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSD_05_LULU_HLPP.
  SELECT SINGLE * FROM ZSD_05_LULU_HELP WHERE
STADTTEIL = ZSD_05_LULU_HLPP-STADTTEIL AND
PARZELLE = ZSD_05_LULU_HLPP-PARZELLE AND
OBJEKT = ZSD_05_LULU_HLPP-OBJEKT AND
KUNNR = ZSD_05_LULU_HLPP-KUNNR AND
PER_BEGINN = ZSD_05_LULU_HLPP-PER_BEGINN AND
PER_ENDE = ZSD_05_LULU_HLPP-PER_ENDE .
ZSD_05_LULU_HLPP-MANDT =
ZSD_05_LULU_HELP-MANDT .
ZSD_05_LULU_HLPP-STADTTEIL =
ZSD_05_LULU_HELP-STADTTEIL .
ZSD_05_LULU_HLPP-PARZELLE =
ZSD_05_LULU_HELP-PARZELLE .
ZSD_05_LULU_HLPP-OBJEKT =
ZSD_05_LULU_HELP-OBJEKT .
ZSD_05_LULU_HLPP-KUNNR =
ZSD_05_LULU_HELP-KUNNR .
ZSD_05_LULU_HLPP-PER_BEGINN =
ZSD_05_LULU_HELP-PER_BEGINN .
ZSD_05_LULU_HLPP-PER_ENDE =
ZSD_05_LULU_HELP-PER_ENDE .
ZSD_05_LULU_HLPP-FAKNR =
ZSD_05_LULU_HELP-FAKNR .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSD_05_LULU_HLPP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSD_05_LULU_HLPP-STADTTEIL TO
ZSD_05_LULU_HELP-STADTTEIL .
MOVE ZSD_05_LULU_HLPP-PARZELLE TO
ZSD_05_LULU_HELP-PARZELLE .
MOVE ZSD_05_LULU_HLPP-OBJEKT TO
ZSD_05_LULU_HELP-OBJEKT .
MOVE ZSD_05_LULU_HLPP-KUNNR TO
ZSD_05_LULU_HELP-KUNNR .
MOVE ZSD_05_LULU_HLPP-PER_BEGINN TO
ZSD_05_LULU_HELP-PER_BEGINN .
MOVE ZSD_05_LULU_HLPP-PER_ENDE TO
ZSD_05_LULU_HELP-PER_ENDE .
MOVE ZSD_05_LULU_HLPP-MANDT TO
ZSD_05_LULU_HELP-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSD_05_LULU_HELP'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSD_05_LULU_HELP TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSD_05_LULU_HELP'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
