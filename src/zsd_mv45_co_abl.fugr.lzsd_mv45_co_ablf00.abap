*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZSD_MV45_CO_ABLP................................*
FORM GET_DATA_ZSD_MV45_CO_ABLP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSD_MV45_CO_ABL WHERE
(VIM_WHERETAB) .
    CLEAR ZSD_MV45_CO_ABLP .
ZSD_MV45_CO_ABLP-MADNT =
ZSD_MV45_CO_ABL-MADNT .
ZSD_MV45_CO_ABLP-VKORG =
ZSD_MV45_CO_ABL-VKORG .
ZSD_MV45_CO_ABLP-VTWEG =
ZSD_MV45_CO_ABL-VTWEG .
ZSD_MV45_CO_ABLP-PRODH =
ZSD_MV45_CO_ABL-PRODH .
ZSD_MV45_CO_ABLP-MATKL =
ZSD_MV45_CO_ABL-MATKL .
ZSD_MV45_CO_ABLP-MATNR =
ZSD_MV45_CO_ABL-MATNR .
ZSD_MV45_CO_ABLP-AUFNR =
ZSD_MV45_CO_ABL-AUFNR .
ZSD_MV45_CO_ABLP-NOTIZ_INFO =
ZSD_MV45_CO_ABL-NOTIZ_INFO .
ZSD_MV45_CO_ABLP-KOSTL =
ZSD_MV45_CO_ABL-KOSTL .
ZSD_MV45_CO_ABLP-PS_PSP_PNR =
ZSD_MV45_CO_ABL-PS_PSP_PNR .
ZSD_MV45_CO_ABLP-LOEVM =
ZSD_MV45_CO_ABL-LOEVM .
ZSD_MV45_CO_ABLP-ERDAT =
ZSD_MV45_CO_ABL-ERDAT .
ZSD_MV45_CO_ABLP-ERZET =
ZSD_MV45_CO_ABL-ERZET .
ZSD_MV45_CO_ABLP-ERNAM =
ZSD_MV45_CO_ABL-ERNAM .
ZSD_MV45_CO_ABLP-AEDAT =
ZSD_MV45_CO_ABL-AEDAT .
ZSD_MV45_CO_ABLP-AEZET =
ZSD_MV45_CO_ABL-AEZET .
ZSD_MV45_CO_ABLP-AENAM =
ZSD_MV45_CO_ABL-AENAM .
<VIM_TOTAL_STRUC> = ZSD_MV45_CO_ABLP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSD_MV45_CO_ABLP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSD_MV45_CO_ABLP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSD_MV45_CO_ABLP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSD_MV45_CO_ABL WHERE
  VKORG = ZSD_MV45_CO_ABLP-VKORG AND
  VTWEG = ZSD_MV45_CO_ABLP-VTWEG AND
  PRODH = ZSD_MV45_CO_ABLP-PRODH AND
  MATKL = ZSD_MV45_CO_ABLP-MATKL AND
  MATNR = ZSD_MV45_CO_ABLP-MATNR .
    IF SY-SUBRC = 0.
    DELETE ZSD_MV45_CO_ABL .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSD_MV45_CO_ABL WHERE
  VKORG = ZSD_MV45_CO_ABLP-VKORG AND
  VTWEG = ZSD_MV45_CO_ABLP-VTWEG AND
  PRODH = ZSD_MV45_CO_ABLP-PRODH AND
  MATKL = ZSD_MV45_CO_ABLP-MATKL AND
  MATNR = ZSD_MV45_CO_ABLP-MATNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSD_MV45_CO_ABL.
    ENDIF.
ZSD_MV45_CO_ABL-MADNT =
ZSD_MV45_CO_ABLP-MADNT .
ZSD_MV45_CO_ABL-VKORG =
ZSD_MV45_CO_ABLP-VKORG .
ZSD_MV45_CO_ABL-VTWEG =
ZSD_MV45_CO_ABLP-VTWEG .
ZSD_MV45_CO_ABL-PRODH =
ZSD_MV45_CO_ABLP-PRODH .
ZSD_MV45_CO_ABL-MATKL =
ZSD_MV45_CO_ABLP-MATKL .
ZSD_MV45_CO_ABL-MATNR =
ZSD_MV45_CO_ABLP-MATNR .
ZSD_MV45_CO_ABL-AUFNR =
ZSD_MV45_CO_ABLP-AUFNR .
ZSD_MV45_CO_ABL-NOTIZ_INFO =
ZSD_MV45_CO_ABLP-NOTIZ_INFO .
ZSD_MV45_CO_ABL-KOSTL =
ZSD_MV45_CO_ABLP-KOSTL .
ZSD_MV45_CO_ABL-PS_PSP_PNR =
ZSD_MV45_CO_ABLP-PS_PSP_PNR .
ZSD_MV45_CO_ABL-LOEVM =
ZSD_MV45_CO_ABLP-LOEVM .
ZSD_MV45_CO_ABL-ERDAT =
ZSD_MV45_CO_ABLP-ERDAT .
ZSD_MV45_CO_ABL-ERZET =
ZSD_MV45_CO_ABLP-ERZET .
ZSD_MV45_CO_ABL-ERNAM =
ZSD_MV45_CO_ABLP-ERNAM .
ZSD_MV45_CO_ABL-AEDAT =
ZSD_MV45_CO_ABLP-AEDAT .
ZSD_MV45_CO_ABL-AEZET =
ZSD_MV45_CO_ABLP-AEZET .
ZSD_MV45_CO_ABL-AENAM =
ZSD_MV45_CO_ABLP-AENAM .
    IF SY-SUBRC = 0.
    UPDATE ZSD_MV45_CO_ABL .
    ELSE.
    INSERT ZSD_MV45_CO_ABL .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSD_MV45_CO_ABLP-UPD_FLAG,
STATUS_ZSD_MV45_CO_ABLP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSD_MV45_CO_ABLP.
  SELECT SINGLE * FROM ZSD_MV45_CO_ABL WHERE
VKORG = ZSD_MV45_CO_ABLP-VKORG AND
VTWEG = ZSD_MV45_CO_ABLP-VTWEG AND
PRODH = ZSD_MV45_CO_ABLP-PRODH AND
MATKL = ZSD_MV45_CO_ABLP-MATKL AND
MATNR = ZSD_MV45_CO_ABLP-MATNR .
ZSD_MV45_CO_ABLP-MADNT =
ZSD_MV45_CO_ABL-MADNT .
ZSD_MV45_CO_ABLP-VKORG =
ZSD_MV45_CO_ABL-VKORG .
ZSD_MV45_CO_ABLP-VTWEG =
ZSD_MV45_CO_ABL-VTWEG .
ZSD_MV45_CO_ABLP-PRODH =
ZSD_MV45_CO_ABL-PRODH .
ZSD_MV45_CO_ABLP-MATKL =
ZSD_MV45_CO_ABL-MATKL .
ZSD_MV45_CO_ABLP-MATNR =
ZSD_MV45_CO_ABL-MATNR .
ZSD_MV45_CO_ABLP-AUFNR =
ZSD_MV45_CO_ABL-AUFNR .
ZSD_MV45_CO_ABLP-NOTIZ_INFO =
ZSD_MV45_CO_ABL-NOTIZ_INFO .
ZSD_MV45_CO_ABLP-KOSTL =
ZSD_MV45_CO_ABL-KOSTL .
ZSD_MV45_CO_ABLP-PS_PSP_PNR =
ZSD_MV45_CO_ABL-PS_PSP_PNR .
ZSD_MV45_CO_ABLP-LOEVM =
ZSD_MV45_CO_ABL-LOEVM .
ZSD_MV45_CO_ABLP-ERDAT =
ZSD_MV45_CO_ABL-ERDAT .
ZSD_MV45_CO_ABLP-ERZET =
ZSD_MV45_CO_ABL-ERZET .
ZSD_MV45_CO_ABLP-ERNAM =
ZSD_MV45_CO_ABL-ERNAM .
ZSD_MV45_CO_ABLP-AEDAT =
ZSD_MV45_CO_ABL-AEDAT .
ZSD_MV45_CO_ABLP-AEZET =
ZSD_MV45_CO_ABL-AEZET .
ZSD_MV45_CO_ABLP-AENAM =
ZSD_MV45_CO_ABL-AENAM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSD_MV45_CO_ABLP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSD_MV45_CO_ABLP-VKORG TO
ZSD_MV45_CO_ABL-VKORG .
MOVE ZSD_MV45_CO_ABLP-VTWEG TO
ZSD_MV45_CO_ABL-VTWEG .
MOVE ZSD_MV45_CO_ABLP-PRODH TO
ZSD_MV45_CO_ABL-PRODH .
MOVE ZSD_MV45_CO_ABLP-MATKL TO
ZSD_MV45_CO_ABL-MATKL .
MOVE ZSD_MV45_CO_ABLP-MATNR TO
ZSD_MV45_CO_ABL-MATNR .
MOVE ZSD_MV45_CO_ABLP-MADNT TO
ZSD_MV45_CO_ABL-MADNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSD_MV45_CO_ABL'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSD_MV45_CO_ABL TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSD_MV45_CO_ABL'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
